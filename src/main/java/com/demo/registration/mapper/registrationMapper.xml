<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.registration.dao.RegistrationDao" >
    <insert id="addNew" parameterType="com.demo.registration.entity.Registration">
       insert into registration
       (name,sex,age,birthday,type,idCard,address,departmentId,doctorId,finish)
       values
       (#{registration.name},#{registration.sex},#{registration.age},#{registration.birthday},#{registration.type}
       ,#{registration.idCard},#{registration.address},#{registration.departmentId},#{registration.doctorId},0
       )
    </insert>
    <delete id="delete" parameterType="com.demo.registration.entity.Registration">
        delete from registration where id=#{registration.id}
    </delete>
    <select id="findInfo" resultType="com.demo.registration.entity.Registration" parameterType="com.demo.registration.entity.Registration">
        select
        t1.id,t1.name,t1.sex,t1.age,t1.birthday,t1.type,t1.idCard,t1.address,t1.departmentId,t1.doctorId,t1.finish,
        t2.departmentName,
        t3.doctorName
        from registration t1 left join department t2 on t1.departmentId=t2.id
        left join doctor t3 on t1.doctorId=t3.id
        <where>
        <if test="registration.departmentName!=null and registration.departmentName!='' ">
            and t2.departmentName like CONCAT('%',#{registration.departmentName},'%')
        </if>
            <if test="registration.doctorName!=null and registration.doctorName!='' ">
                and t3.doctorName like CONCAT('%',#{registration.doctorName},'%')
            </if>
            <if test="registration.name!=null and registration.name!='' ">
                and t1.name like CONCAT('%',#{registration.name},'%')
            </if>
        </where>
    </select>






    <select id="countInfo" resultType="int" parameterType="com.demo.registration.entity.Registration">
        select count(*)
        from registration t1 left join department t2 on t1.departmentId=t2.id
        left join doctor t3 on t1.doctorId=t3.id
        <where>
            <if test="registration.departmentName!=null and registration.departmentName!='' ">
                and t2.departmentName like CONCAT('%',#{registration.departmentName},'%')
            </if>
            <if test="registration.doctorName!=null and registration.doctorName!='' ">
                and t3.doctorName like CONCAT('%',#{registration.doctorName},'%')
            </if>
            <if test="registration.name!=null and registration.name!='' ">
                and t1.name like CONCAT('%',#{registration.name},'%')
            </if>
        </where>
    </select>


    <select id="countNumByDoctorId" resultType="int" parameterType="com.demo.registration.entity.Registration">
         select count(*)
        from registration t1 where  t1.doctorId=#{registration.doctorId} and t1.finish=0
     </select>




    <select id="findInfoByDoctor" resultType="com.demo.registration.entity.Registration" parameterType="com.demo.registration.entity.Registration">
        select
        t1.id,t1.name,t1.sex,t1.age,t1.birthday,t1.idCard,t1.address,t1.doctorId,t1.finish from registration t1
        where t1.doctorId = #{registration.doctorId}

            <if test="registration.name!=null and registration.name!='' ">
                and t1.name like CONCAT('%',#{registration.name},'%')
            </if>

    </select>

    <select id="countInfoByDoctor" resultType="int" parameterType="com.demo.registration.entity.Registration">
         select count(*)
        from registration t1
        where t1.doctorId = #{registration.doctorId}

            <if test="registration.name!=null and registration.name!='' ">
                and t1.name like CONCAT('%',#{registration.name},'%')
            </if>

     </select>

    <update id="update" parameterType="com.demo.registration.entity.Registration">
        update registration set
        name=#{registration.name},
        type=#{registration.type},
        sex=#{registration.sex},
        age=#{registration.age},
        birthday=#{registration.birthday},
        idCard=#{registration.idCard},
        address=#{registration.address},
        departmentId=#{registration.departmentId},
        doctorId=#{registration.doctorId}
        where id=#{registration.id}
     </update>

    <update id="updateFinsh" parameterType="com.demo.registration.entity.Registration">
        update registration set
        finish=#{registration.finish}
        where id=#{registration.id}
     </update>

</mapper>